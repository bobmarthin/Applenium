<Window x:Name="Applenium" x:Class="Applenium.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:extendedGrid="clr-namespace:ExtendedGrid.ExtendedGridControl;assembly=ExtendedGrid"
        xmlns:extendedColumn="clr-namespace:ExtendedGrid.ExtendedColumn;assembly=ExtendedGrid"
        xmlns:Controls="clr-namespace:ExtendedGrid.Microsoft.Windows.Controls;assembly=ExtendedGrid"
 
        Title="Applenium" Height="904" Width="1352" Closed="WindoweToroAutoStudio_Closed" Icon="..\5 - Resources\applenium.ico"
        Closing="WindoweToroAutoStudio_Closing" Unloaded="WindoweToroAutoStudio_Unloaded" AllowDrop="True"
        FontSize="15">

    <Window.Resources>
        <TextBlock x:Key="GuiMapObjectName" Text="Meaningfull Name given by the test automation tester"></TextBlock>
        <TextBlock x:Key="TagType" Text="The type of Identifier according the HTML Inspection"></TextBlock>
        <TextBlock x:Key="TagTypeValue" Text="The Value of Identifier according the HTML Inspection"></TextBlock>


        <DataTemplate x:Key="ProjectTestTemplate">

            <StackPanel Orientation="Horizontal">
                <Image Source="{Binding StatusCompletedImage}" x:Name="Icon" SnapsToDevicePixels="True" Stretch="Fill" />
                <TextBlock Text="{Binding  TestName}">
                    <TextBlock.ContextMenu>
                        <ContextMenu>
                            <MenuItem x:Name="MenuUpadteTest" Header="Update Tests" Click="MenuUpadteTest_Click" />
                            <MenuItem x:Name="MenuItemDeleteTest" Header="Delete Test"
                                      Click="MenuItem_DeleteTest_Click" />
                            <MenuItem Header="Move Test under other section" Click="MenuUpadteTest_Click" />
                            <MenuItem Header="Test Comleted" Click="StatusCompleted" />
                            <MenuItem Header="Test Uncomleted" Click="StatusUnCompleted" />
                            <MenuItem Header="Copy Test" Click="CopyTest" />
                            <MenuItem Header="Change Test version" Click="ChangeTestVersionPopup" />
                        </ContextMenu>
                    </TextBlock.ContextMenu>
                </TextBlock>

            </StackPanel>
        </DataTemplate>


        <HierarchicalDataTemplate x:Key="ProjectSectionTemplate" ItemsSource="{Binding SectionTest}"
                                  ItemTemplate="{StaticResource ProjectTestTemplate}">
            <TextBlock Text="{Binding GuiPageSectionName}">
                <TextBlock.ContextMenu>
                    <ContextMenu>
                        <MenuItem x:Name="MenuItemAddNewTest" Header="Add New Test" Click="MenuItem_AddNewTest_Click" />

                        <MenuItem x:Name="MenuItemRenamePageSectioClick" Header="Rename Page Section"
                                  Click="MenuItem_RenamePageSection_Click" />
                    </ContextMenu>
                </TextBlock.ContextMenu>
            </TextBlock>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="ProjectPageTemplate" ItemsSource="{Binding PageSection}"
                                  ItemTemplate="{StaticResource ProjectSectionTemplate}">
            <TextBlock Text="{Binding ProjectPageName}">
                <TextBlock.ContextMenu>
                    <ContextMenu>
                        <MenuItem x:Name="MenuItemCreateNewPageSection" Header="Add new Page Section"
                                  Click="MenuItem_AddNewPageSection_Click" />
                        <MenuItem Header="Rename Page" Click="MenuItem_RenamePage_Click" />
                    </ContextMenu>
                </TextBlock.ContextMenu>
            </TextBlock>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="ProjectTemplate" ItemsSource="{Binding ProjectPage}"
                                  ItemTemplate="{StaticResource ProjectPageTemplate}">

            <TextBlock Text="{Binding  GuiProjectName}">
                <TextBlock.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Add New Page" Click="MenuItem_AddNewPage_Click" />
                    </ContextMenu>
                </TextBlock.ContextMenu>
            </TextBlock>
        </HierarchicalDataTemplate>


        <!--##################################################################################################################################################-->
        <DataTemplate x:Key="ProjectSection1Template">
            <TextBlock Text="{Binding GuiPageSectionName}">
                <TextBlock.ContextMenu>
                    <ContextMenu>
                        <MenuItem x:Name="MenuItemAddNewObject" Header="Add New Element"
                                  Click="MenuItem_AddnewObject_Click" />
                        <MenuItem x:Name="MenuItemRenamePageSectioClick" Header="Rename Page Section"
                                  Click="MenuItem_RenamePageSection_Click" />
                    </ContextMenu>
                </TextBlock.ContextMenu>
            </TextBlock>
        </DataTemplate>

        <HierarchicalDataTemplate x:Key="ProjectPage1Template" ItemsSource="{Binding PageSection}"
                                  ItemTemplate="{StaticResource ProjectSection1Template}">
            <TextBlock Text="{Binding ProjectPageName}">
                <TextBlock.ContextMenu>
                    <ContextMenu>
                        <MenuItem x:Name="MenuItemCreateNewPageSection" Header="Add new Page Section"
                                  Click="MenuItem_AddNewPageSection_Click" />
                        <MenuItem Header="Rename Page" Click="MenuItem_RenamePage_Click" />
                    </ContextMenu>
                </TextBlock.ContextMenu>
            </TextBlock>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="Project1Template" ItemsSource="{Binding ProjectPage}"
                                  ItemTemplate="{StaticResource ProjectPage1Template}">
            <TextBlock Text="{Binding  GuiProjectName}">
                <TextBlock.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Add New Page" Click="MenuItem_AddNewPage_Click" />
                    </ContextMenu>
                </TextBlock.ContextMenu>
            </TextBlock>
        </HierarchicalDataTemplate>

    </Window.Resources>

    <Grid>

        <Border Background="White" Visibility="{Binding Visibility}"  Margin="0,0,0,30">
            <!--       <Border.BitmapEffect>
                <DropShadowBitmapEffect Color="Green"
                                        Opacity="0.5" Direction="270"
                                        ShadowDepth="0.7" />
            </Border.BitmapEffect>

            -->
            <TabControl x:Name="TabControlMain" Margin="0,20,0,0"  Width="auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" RenderTransformOrigin="0.693,0.479" Loaded="TabControlMain_Loaded">
                <TabItem x:Name="TabItemGuiMap" Header="GuiMap" ForceCursor="True" MinWidth ="110"
                         VerticalAlignment="Stretch" HorizontalAlignment="Stretch" IsManipulationEnabled="True"
                         Margin="0"  Width="auto" MinHeight="60" Loaded="TabItemGuiMap_Loaded"  >
                    <Grid ScrollViewer.HorizontalScrollBarVisibility="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="101" />
                            <ColumnDefinition Width="347*"/>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="888*" MinWidth="100" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="0" MinWidth="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*" MinHeight="50" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" MinHeight="70" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" MinHeight="50" MaxHeight="100" />
                        </Grid.RowDefinitions>

                        <GridSplitter HorizontalAlignment="right"
                                      VerticalAlignment="Stretch"
                                      Grid.Column="2" Grid.Row="0" ResizeBehavior="PreviousAndNext"
                                      Width="3" />
                        <GridSplitter ResizeDirection="Rows" HorizontalAlignment="Stretch" Grid.ColumnSpan="4"
                                      VerticalAlignment="top"
                                      Grid.Row="1" Grid.Column="0" ResizeBehavior="PreviousAndNext"
                                      Height="3" />
                        <GridSplitter ResizeDirection="Rows" HorizontalAlignment="Stretch" Grid.ColumnSpan="4"
                                      VerticalAlignment="top"
                                      Grid.Row="3" Grid.Column="0" ResizeBehavior="PreviousAndNext"
                                      Height="3" />

                        <DataGrid Grid.Column="2" Grid.Row="0" x:Name="DataGridGuiMap"
                                  PreviewKeyDown="dataGridGuiMap_PreviewKeyDown" AutoGenerateColumns="False"
                                  HorizontalAlignment="Stretch" Margin="0.396,3,2.604,0" VerticalAlignment="Stretch"
                                  Height="auto" Width="auto" RowEditEnding="DataGridGuiMap_RowEditing"
                                  BeginningEdit="DataGridGuiMap_BeginingEdit"
                                  CellEditEnding="DataGridGuiMap_CellEditEnding"
                                  SelectedCellsChanged="DataGridGuiMap_Selected_CellsChanged" IsReadOnly="True"
                                  RowDetailsVisibilityMode="Visible" Background="{x:Null}"
                                  GridLinesVisibility="Horizontal"
                                  RowBackground="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                                  AreRowDetailsFrozen="True" Grid.ColumnSpan="2" Grid.RowSpan="2">
                            <DataGrid.Columns>
                                <DataGridTextColumn
                                    Binding="{Binding GuiMapObjectName ,UpdateSourceTrigger=PropertyChanged}"
                                    Header="TA Element Name" ToolTipService.ToolTip="{StaticResource GuiMapObjectName}"
                                    Width="*" SortDirection="Ascending" />
                                <DataGridComboBoxColumn x:Name="DataGridComboboxColumnType" DisplayMemberPath="TagType"
                                                        SelectedValuePath="TagTypeID"
                                                        SelectedValueBinding="{Binding TagTypeID,UpdateSourceTrigger=PropertyChanged}"
                                                        Header="Identifier Type"
                                                        ToolTipService.ToolTip="{StaticResource TagType}" Width="*"
                                                        SortDirection="Ascending" />
                                <DataGridTextColumn
                                    Binding="{Binding TagTypeValue ,UpdateSourceTrigger=PropertyChanged}"
                                    Header="Identifier Value" ToolTipService.ToolTip="{StaticResource TagTypeValue}"
                                    Width="*" SortDirection="Ascending" />
                                <!-- <DataGridComboBoxColumn  x:Name="DataGridComboboxColumnProject" DisplayMemberPath="ProjectPageName" SelectedValuePath="GuiProjectPageID" SelectedValueBinding="{Binding GuiProjectID}" Header="Page"   ToolTipService.ToolTip="{StaticResource ProjectPageName}" IsReadOnly="True" Width="*" SortDirection="Ascending" SortMemberPath="GuiProjectPageID"/>-->
                            </DataGrid.Columns>
                        </DataGrid>

                        <TreeView Name="TreeViewProjects" ItemsSource="{Binding Projects}"
                                  ItemTemplate="{StaticResource Project1Template}" Grid.Column="0" Grid.ColumnSpan="2"
                                  Grid.Row="0" HorizontalAlignment="Stretch" Height="auto" Margin="-5,0,4.604,0"
                                  VerticalAlignment="Stretch" Width="Auto"
                                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                  SelectedItemChanged="TreeViewProjects_SelectedItemChanged"
                                  PreviewMouseRightButtonDown="TreeViewProjects_OnPreviewMouseRightButtonDown"
                                  x:FieldModifier="private" />

                        <DataGrid Grid.ColumnSpan="4" Grid.Row="2" x:Name="DataGridGuiMapEditorHidenTable"
                                  PreviewKeyDown="dataGridGuiMap_PreviewKeyDown_Edit" AutoGenerateColumns="False"
                                  HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch"
                                  Height="auto" Width="auto" IsManipulationEnabled="True"
                                  RowEditEnding="DataGridGuiMap_RowEditing_Edit"
                                  BeginningEdit="DataGridGuiMap_BeginingEdit_Edit"
                                  CellEditEnding="DataGridGuiMap_CellEditEnding_Edit"
                                  SelectedCellsChanged="DataGridGuiMap_Selected_CellsChanged_Edit" IsReadOnly="False"
                                  AlternationCount="-1"
                                  RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}">
                            <DataGrid.Columns>
                                <DataGridTextColumn
                                    Binding="{Binding GuiMapObjectName ,UpdateSourceTrigger=PropertyChanged}"
                                    Header="TA Element Name"
                                    ToolTipService.ToolTip="Meaningfull Name given by the test automation tester"
                                    Width="*" SortDirection="Ascending" />
                                <DataGridComboBoxColumn x:Name="DataGridComboboxColumnTypeEdit"
                                                        DisplayMemberPath="TagType" SelectedValuePath=" TagTypeID"
                                                        SelectedValueBinding="{Binding TagTypeID,UpdateSourceTrigger=PropertyChanged}"
                                                        Header="Identifier Type" ToolTipService.ToolTip="ssss"
                                                        Width="*" />
                                <DataGridTextColumn
                                    Binding="{Binding TagTypeValue ,UpdateSourceTrigger=PropertyChanged}"
                                    Header="Identifier Value " Width="*" SortDirection="Ascending" />
                                <!--<DataGridTextColumn Binding="{Binding GuiProjectID}" Header="Project" Width="100"/>-->
                                <DataGridComboBoxColumn x:Name="DataGridComboboxColumnProjectEdit"
                                                        DisplayMemberPath="GuiPageSectionName"
                                                        SelectedValuePath="GuiPageSectionID"
                                                        SelectedValueBinding="{Binding GuiProjectID,UpdateSourceTrigger=PropertyChanged}"
                                                        Header="Page Section" IsReadOnly="False" Width="*">
                                    <DataGridComboBoxColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{TemplateBinding Content}">
                                                <TextBlock.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Show All Page Sections"
                                                                  Click="ShowAllPageSections" />
                                                        <MenuItem Header="Show Only Sections of current page"
                                                                  Click="ShowOnlyPageSections" />
                                                    </ContextMenu>
                                                </TextBlock.ContextMenu>
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridComboBoxColumn.HeaderTemplate>
                                </DataGridComboBoxColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Grid Grid.Row="4" Grid.ColumnSpan="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" MinWidth="210" />
                                <ColumnDefinition Width="*" MinWidth="210" />
                                <ColumnDefinition Width="*" MinWidth="210" />
                                <ColumnDefinition Width="*" MinWidth="210" />
                                <ColumnDefinition Width="*" MinWidth="210" />
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Grid.Row="0" x:Name="BtnHighLight" Content="HighLight Element"
                                    HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center"
                                    Width="210" Height="47" Click="btnHighLight_Click" IsEnabled="False" />
                            <Button Grid.Column="1" Grid.Row="0" x:Name="BtnAddNewObject" Content="Add new Element"
                                    HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center"
                                    Width="210" Height="47" Click="btnAddNewObject_Click" />
                            <Button Grid.Column="4" Grid.Row="0" x:Name="ButtonSwitchWindow"
                                    Content="SwitchWindow" HorizontalAlignment="Center" Margin="0,0,0,0"
                                    VerticalAlignment="Center" Width="210" Height="47" Click="ButtonSwitchWindow_Click" />
                            <Button Grid.Column="2" Grid.Row="0" x:Name="BtnUpdateObject"
                                    Content="Update Selected Element" HorizontalAlignment="Center" Margin="0,0,0,0"
                                    VerticalAlignment="Center" Width="210" Height="47" Click="btnUpdateObject_Click"
                                    IsEnabled="False" />
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem x:Name="TabItemTestEditor" Header="TestEditor" Margin="0" 
                         VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  Width="auto" MinWidth ="110" Loaded="TabItemTestEditor_Loaded" >
                    <Grid ScrollViewer.HorizontalScrollBarVisibility="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" MinWidth="100" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="2*" MinWidth="100" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="0" MinWidth="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*" MinHeight="50" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="0.5*" MinHeight="25" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" MinHeight="100" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" MinHeight="50" MaxHeight="100" />
                        </Grid.RowDefinitions>

                        <GridSplitter HorizontalAlignment="right"
                                      VerticalAlignment="Stretch"
                                      Grid.Column="1" Grid.Row="0" ResizeBehavior="PreviousAndNext"
                                      Width="3" />
                        <GridSplitter ResizeDirection="Rows" HorizontalAlignment="Stretch" Grid.ColumnSpan="5"
                                      VerticalAlignment="top"
                                      Grid.Row="1" Grid.Column="0" ResizeBehavior="PreviousAndNext"
                                      Height="3" />
                        <GridSplitter ResizeDirection="Rows" HorizontalAlignment="Stretch" Grid.ColumnSpan="5"
                                      VerticalAlignment="top"
                                      Grid.Row="3" Grid.Column="0" ResizeBehavior="PreviousAndNext"
                                      Height="3" />
                        <GridSplitter ResizeDirection="Rows" HorizontalAlignment="Stretch" Grid.ColumnSpan="5"
                                      VerticalAlignment="top"
                                      Grid.Row="5" Grid.Column="0" ResizeBehavior="PreviousAndNext"
                                      Height="3" />
                        <Grid Grid.Column="2" Grid.ColumnSpan="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="44" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>

                                <RowDefinition Height="1*" />

                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>

                            <Popup x:Name="PopupFloatingTextBox" Width="auto" Height="auto" StaysOpen="True"
                               AllowsTransparency="False" Placement="Center" PopupAnimation="Slide"
                               ScrollViewer.HorizontalScrollBarVisibility="Auto"
                               ScrollViewer.VerticalScrollBarVisibility="Auto" AllowDrop="True" Opened="PopupCloneFromTestingEnviromnet_Opened">
                                <Border Padding="2" CornerRadius="30" BorderThickness="2">
                                    <Grid Background="White">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="4*" MinWidth="100" />
                                            <ColumnDefinition Width="4*" MinWidth="100" />
                                            <ColumnDefinition Width="4*" MinWidth="100" />
                                            <ColumnDefinition Width="4*" MinWidth="100" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="4*"  />
                                            <RowDefinition Height="1*" />
                                            <RowDefinition Height="1*" />
                                            <RowDefinition Height="2*" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>


                                        <TextBox Name="txtFloating"  Grid.Row="3" Grid.Column="2" />
                                        <Label  Name="LabelfloatingTextBox" Content="Enter Command Value :" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  HorizontalAlignment="Stretch" Height="auto" Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="4" VerticalAlignment="Stretch" Width="auto"/>
                                    </Grid>
                                </Border>
                            </Popup>

                            <Popup Name="PopupTestCommand" Width="auto" Height="auto" StaysOpen="True"
                               AllowsTransparency="False" Placement="Center" PopupAnimation="Slide" IsEnabled="True" 
                               ScrollViewer.HorizontalScrollBarVisibility="Auto"
                               ScrollViewer.VerticalScrollBarVisibility="Auto" 
                               AllowDrop="True">
                                <Border Padding="2" CornerRadius="30" BorderThickness="2">
                                    <Grid Background="White" MinHeight="200" MinWidth="300" Margin="8" Height="300" >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"></RowDefinition>
                                            <RowDefinition Height="auto"></RowDefinition>
                                            <RowDefinition Height="auto"></RowDefinition>
                                            <RowDefinition Height="auto"></RowDefinition>
                                            <RowDefinition Height="auto"></RowDefinition>
                                            <RowDefinition Height="auto"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"></ColumnDefinition>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Label x:Name="PopupWizardName" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"  FontSize="24" AllowDrop="True" Content="  Wizard"/>
                                        <Label x:Name="LABCmdName" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" Content="Command"/>
                                        <TextBox  x:Name="TBCmdName" Grid.Row="1" Grid.Column="1" MinWidth="250" HorizontalAlignment="Left" Margin="8" IsReadOnly="False"></TextBox>
                                        <Label x:Name="LABGuiMapName" Grid.Row="2" Grid.Column="0" Content="Name" Margin="8" />
                                        <TextBox x:Name="TBGuiMapName"  Grid.Row="2" Grid.Column="1" MinWidth="250" HorizontalAlignment="Left" Margin="8" IsReadOnly="False"></TextBox>

                                        <Label x:Name="LABGuiMapTagTypeName" Grid.Row="3" Grid.Column="0" Content="Identifier Type" Margin="8" />
                                        <TextBox x:Name="TBGuiMapTagTypeName"  Grid.Row="3" Grid.Column="1" MinWidth="250" HorizontalAlignment="Left" Margin="8" IsReadOnly="False"></TextBox>

                                        <Label x:Name="LABGuiMapValue" Grid.Row="4" Grid.Column="0" Content="Value" Margin="8" />
                                        <TextBox x:Name="TBGuiMapValue" Grid.Row="4" Grid.Column="1" MinWidth="250" HorizontalAlignment="Left" Margin="8" IsReadOnly="False"></TextBox>

                                        <TextBox x:Name="TBTestStepID" Grid.Row="0" Grid.Column="0" MinWidth="250" HorizontalAlignment="Left" Margin="8" IsReadOnly="False" Visibility="Hidden"></TextBox>
                                        <TextBox x:Name="TBTestID" Grid.Row="0" Grid.Column="0" MinWidth="250" HorizontalAlignment="Left" Margin="8" IsReadOnly="False" Visibility="Hidden"></TextBox>
                                        <TextBox x:Name="TBVersionClnID" Grid.Row="0" Grid.Column="0" MinWidth="250" HorizontalAlignment="Left" Margin="8" IsReadOnly="False" Visibility="Hidden"></TextBox>

                                        <Button x:Name="WizardtnOK"  Grid.Row="5" Grid.Column="0" Margin="20" MaxWidth="120" HorizontalAlignment="Right" MinWidth="100" Content="OK" Click="AddNewCommandFromPopup"></Button>
                                        <Button x:Name="btnCancel" Grid.Row="5" Grid.Column="1" Margin="20" HorizontalAlignment="Left" MinWidth="100" Content="Cancel" Click="CancelAddNewCommandFromPopup"></Button>

                                    </Grid>

                                </Border>
                            </Popup>

                            <DataGrid Grid.Column="0" Grid.Row="0" x:Name="DataGridTestEditor"
                                      AutoGenerateColumns="False" HorizontalAlignment="Stretch" Margin="0"
                                      VerticalAlignment="Stretch" Height="auto" Width="auto"
                                      IsManipulationEnabled="True" RowEditEnding="DataGridTestEditor_RowEditing"
                                      AllowDrop="True" CanUserReorderColumns="False"
                                      PreviewKeyDown="dataGridTestEditor_PreviewKeyDown"
                                      BeginningEdit="DataGridTestEditor_BeginingEdit"
                                      CellEditEnding="DataGridTestEditoer_CellEditEnding" UseLayoutRounding="False"
                                      GridLinesVisibility="Horizontal"
                                      RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}"
                                      Grid.RowSpan="2" SelectedCellsChanged="DataGridTestEditor_SelectedCellsChanged"
                                      LostFocus="DataGridTestEditor_LostFocus" IsTextSearchEnabled="True">
                                <DataGrid.Columns>
                                    <DataGridComboBoxColumn x:Name="DataGridComboboxColumnCommand"
                                                            DisplayMemberPath="TestCommandName"
                                                            SelectedValuePath="TestCommandID"
                                                            SelectedValueBinding="{Binding GuiMapCommandID, UpdateSourceTrigger=PropertyChanged}"
                                                            Header="Command" Width="100" CanUserSort="False"
                                                            SortDirection="Ascending" SortMemberPath="TestCommandName" />
                                    <DataGridComboBoxColumn x:Name="DataGridComboboxColumnGuiMap" 
                                                            DisplayMemberPath="GuiMapObjectName"
                                                            SelectedValuePath="GuiMapID"
                                                            ItemsSource="{Binding MyValueItem}"
                                                            SelectedValueBinding="{Binding GuiMapID, UpdateSourceTrigger=PropertyChanged}"
                                                            Header="TA Element Name" Width="200" CanUserSort="False" 
                                                            SortDirection="Ascending" SortMemberPath="GuiMapObjectName" >
                                        <DataGridComboBoxColumn.EditingElementStyle>
                                            <Style TargetType="ComboBox">
                                                <Setter Property="IsEditable" Value="True"/>
                                                <EventSetter Event="LostFocus" Handler="ComboboxGuiMap_LostFocus" />
                                            </Style>
                                        </DataGridComboBoxColumn.EditingElementStyle>
                                    </DataGridComboBoxColumn>

                                    <DataGridComboBoxColumn x:Name="DataGridComboboxColumnGuiMapValue"
                                                            DisplayMemberPath="TagTypeValue"
                                                            SelectedValuePath="GuiMapID"
                                                            SelectedValueBinding="{Binding GuiMapID, UpdateSourceTrigger=PropertyChanged}"
                                                            Header="TA Element Value" Width="*" CanUserSort="False"
                                                            SortDirection="Ascending" SortMemberPath="TagTypeValue" IsReadOnly="False">
                                        <DataGridComboBoxColumn.EditingElementStyle>
                                            <Style TargetType="ComboBox">
                                                <Setter Property="IsEditable" Value="True"/>

                                            </Style>
                                        </DataGridComboBoxColumn.EditingElementStyle>

                                    </DataGridComboBoxColumn>

                                    <DataGridComboBoxColumn x:Name="DataGridComboboxInputDataColumn"
                                                            DisplayMemberPath="COLUMN_NAME"
                                                            SelectedValuePath="COLUMN_NAME"
                                                            SelectedValueBinding="{Binding InputDataColumn, UpdateSourceTrigger=PropertyChanged}"
                                                            Header="Table Column Name" CanUserSort="False"
                                                            SortDirection="Ascending" SortMemberPath="COLUMN_NAME" />
                                </DataGrid.Columns>
                            </DataGrid>
                            <Button x:Name="BtnMoveStepUp" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch" Width="auto" Click="btnMoveStepUp_Click"
                                    IsEnabled="False" Margin="0">
                                <StackPanel>
                                    <Image Source="..\5 - Resources\StockIndexUp.png" />
                                </StackPanel>
                            </Button>
                            <Button x:Name="BtnMoveStepDown" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch" Width="Auto" Click="btnMoveStepDown_Click"
                                    IsEnabled="False" Margin="0">
                                <StackPanel>
                                    <Image Source="..\5 - Resources\StockIndexDown.png" />
                                </StackPanel>
                            </Button>
                            <Popup x:Name="PopupMoveTestFromVersionToVersion" Width="auto" Height="auto" StaysOpen="True"
                               AllowsTransparency="False" Placement="Center" PopupAnimation="Slide"
                               ScrollViewer.HorizontalScrollBarVisibility="Auto"
                               ScrollViewer.VerticalScrollBarVisibility="Auto" AllowDrop="True" Opened="PopupCloneFromTestingEnviromnet_Opened">

                                <Border Padding="2" CornerRadius="30" BorderThickness="2">

                                    <Grid Background="White">

                                        <Grid.ColumnDefinitions>

                                            <ColumnDefinition Width="4*" MinWidth="100" />

                                            <ColumnDefinition Width="4*" MinWidth="100" />

                                            <ColumnDefinition Width="4*" MinWidth="100" />

                                            <ColumnDefinition Width="4*" MinWidth="100" />

                                        </Grid.ColumnDefinitions>

                                        <Grid.RowDefinitions>

                                            <RowDefinition Height="4*"  />

                                            <RowDefinition Height="1*" />

                                            <RowDefinition Height="1*" />

                                            <RowDefinition Height="2*" />

                                            <RowDefinition />

                                        </Grid.RowDefinitions>


                                        <ComboBox Name="ComboboxSourceVersion" DisplayMemberPath="EnvironmentVersionName" SelectedValuePath=" EnvironmentVersionID"  HorizontalAlignment="Stretch" Height="auto"  Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" VerticalAlignment="Stretch" Width="auto" Loaded="ComboboxSourceVersion_Loaded" PreviewKeyDown="ComboboxTestingEnvironment_TextChanged"/>

                                        <Button  Content="OK" Click="PopupMoveTestFromVersionToVersionbtnOK_Click" Grid.Row="3" Grid.Column="1" />

                                        <Button Content="Cancel" Click="PopupMoveTestFromVersionToVersionbtnCancel_Click" Grid.Row="3" Grid.Column="2" />

                                        <Label  Name="SourceVersion" Content="SourceVersion:" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  HorizontalAlignment="Stretch" Height="auto" Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="4" VerticalAlignment="Stretch" Width="auto"/>

                                    </Grid>

                                </Border>

                            </Popup>
                        </Grid>
                        <TreeView ItemsSource="{Binding Projects}" ItemTemplate="{StaticResource ProjectTemplate}"
                                  Grid.Column="0" Grid.ColumnSpan="1" Grid.Row="0" Name="TreeViewTests"
                                  HorizontalAlignment="Stretch" Height="auto" Margin="0" VerticalAlignment="Stretch"
                                  Width="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                  SelectedItemChanged="TreeViewTests_SelectedItemChanged" UseLayoutRounding="False"                                  
                                  x:FieldModifier="private"
                                  PreviewMouseRightButtonDown="TreeViewTests_OnPreviewMouseRightButtonDown" />

                        <Popup x:Name="PopupNewTest" Width="800" Height="600" StaysOpen="True"
                               AllowsTransparency="True" Placement="Center" PopupAnimation="Fade"
                               ScrollViewer.HorizontalScrollBarVisibility="Auto"
                               ScrollViewer.VerticalScrollBarVisibility="Auto" Cursor="Arrow"
                               IsManipulationEnabled="True" ScrollViewer.CanContentScroll="True">
                            <Border Padding="2" CornerRadius="20" BorderThickness="2">
                                <Grid ScrollViewer.HorizontalScrollBarVisibility="Auto">

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="8*" MinHeight="500" />
                                        <RowDefinition Height="2*" MinHeight="100" />
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="2*" MinWidth="100" />
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition Width="2*" MinWidth="100" />
                                        </Grid.ColumnDefinitions>


                                        <GridSplitter HorizontalAlignment="right" VerticalAlignment="Stretch"
                                                      Grid.Column="1" Grid.Row="0" ResizeBehavior="PreviousAndNext"
                                                      Width="3" />


                                        <TreeView Grid.Column="0" Grid.Row="0" x:Name="TreeViewProjectsNewTest"
                                                  ItemTemplate="{StaticResource ProjectTemplate}"
                                                  HorizontalAlignment="Stretch" Height="auto"
                                                  VerticalAlignment="Stretch"
                                                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                  SelectedItemChanged="TreeViewProjectsNewTest_SelectedItemChanged"
                                                  ScrollViewer.CanContentScroll="True" Margin="0"
                                                  Loaded="TreeViewProjectsNewTest_loaded"
                                                  PreviewMouseRightButtonDown="TreeViewProjectsNewTest_OnPreviewMouseRightButtonDown" />
                                        <DataGrid Grid.Column="2" Grid.Row="0" x:Name="DataGridNewTest"
                                                  AutoGenerateColumns="False" HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch" Height="auto"
                                                  IsManipulationEnabled="True"
                                                  RowEditEnding="DataGridNewTest_RowEditing" Margin="0"
                                                  PreviewKeyDown="DataGridNewTest_PreviewKeyDown"
                                                  RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn
                                                    Binding="{Binding TestName, UpdateSourceTrigger=PropertyChanged}"
                                                    Header="NewTestName " Width="*" />
                                                <DataGridComboBoxColumn x:Name="DataGridComboboxColumnTableName"
                                                                        DisplayMemberPath="name"
                                                                        SelectedValuePath="name"
                                                                        SelectedValueBinding="{Binding InputTableName, UpdateSourceTrigger=PropertyChanged}"
                                                                        Header="Data Table " Width="100" />
                                                <DataGridTextColumn
                                                    Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                                                    Header="Test Description " Width="*" />
                                                <DataGridComboBoxColumn x:Name="DataGridComboboxColumnPageSection"
                                                                        DisplayMemberPath="GuiPageSectionName"
                                                                        SelectedValuePath="GuiPageSectionID"
                                                                        SelectedValueBinding="{Binding ProjectID,UpdateSourceTrigger=PropertyChanged}"
                                                                        Header="Page" IsReadOnly="False" Width="*">
                                                    <DataGridComboBoxColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{TemplateBinding Content}">
                                                                <TextBlock.ContextMenu>
                                                                    <ContextMenu>
                                                                        <MenuItem Header="Show All Page Sections"
                                                                                  Click="ShowAllPageSections" />
                                                                        <MenuItem
                                                                            Header="Show Only Sections of current page "
                                                                            Click="ShowOnlyPageSections" />
                                                                    </ContextMenu>
                                                                </TextBlock.ContextMenu>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                    </DataGridComboBoxColumn.HeaderTemplate>
                                                </DataGridComboBoxColumn>
                                                <!-- <DataGridTextColumn Binding="{Binding StatusCompleted, UpdateSourceTrigger=PropertyChanged}" Header="Status Completed " Width="*"/>-->
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </Grid>
                                    <Button Grid.Row="1" Content="Save and Close " Click="btnSaveTest_Click" Margin="0" />

                                </Grid>

                            </Border>
                        </Popup>

                        <Grid Grid.Row="6" Grid.ColumnSpan="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" MinWidth="210" />
                                <ColumnDefinition Width="*" MinWidth="210" />
                                <ColumnDefinition Width="*" MinWidth="210" />
                                <ColumnDefinition Width="*" MinWidth="210" />
                                <ColumnDefinition Width="*" MinWidth="210" />
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0" Grid.Row="0" x:Name="BtnNewTest" Content="Add New Test"
                                    HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="210"
                                    Height="47" Click="btnNewTest_Click" />
                            <Button Grid.Column="1" Grid.Row="0" x:Name="BtnRun" Content="Run to evaluate Test"
                                    HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="210"
                                    Click="btnRun_Click" Height="47" />
                            <Button Grid.Column="3" Grid.Row="0" x:Name="BtnAddInputTable" Content="Add Input Table"
                                    HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="210"
                                    Click="btnAddInputTable_Click" Height="47" />
                            <Button Grid.Column="2" Grid.Row="0" x:Name="BtnStopTest" Content="StopCurrentTest"
                                    HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="210"
                                    Click="btnStopTest_Click" Height="47" IsEnabled="False"/>
                            <Button Grid.Column="4" Grid.Row="0" x:Name="ButtonSwitchWindow1"
                                    Content="SwitchWindow" HorizontalAlignment="Center" Margin="0,0,0,0"
                                    VerticalAlignment="Center" Width="210" Height="47" Click="ButtonSwitchWindow_Click" />
                        </Grid>
                        <Label Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="2" x:Name="LabelTestDescription"
                               Content="" HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch"
                               Height="auto" Width="auto" BorderBrush="Black" BorderThickness="1"
                               HorizontalContentAlignment="Center" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                               ScrollViewer.VerticalScrollBarVisibility="Auto" />
                        <Grid Grid.Row="4" Grid.ColumnSpan="5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" MinHeight="25" />
                                <RowDefinition Height="3*" />
                            </Grid.RowDefinitions>

                            <Label Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="0" x:Name="LabelTableDescriptionCopy"
                                   Content="" HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch"
                                   Height="auto" Width="auto" HorizontalContentAlignment="Center" BorderBrush="Black"
                                   BorderThickness="1" Background="#FFE6E6E6" />
                            <DataGrid Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="1"
                                      x:Name="DataGridTestEditorHidenInputTable" HorizontalAlignment="Stretch"
                                      Margin="0" VerticalAlignment="Stretch" Height="auto" Width="auto"
                                      IsManipulationEnabled="False" IsEnabled="False" />
                            <DataGrid Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="1"
                                      x:Name="DataGridTestEditorInputTable" HorizontalAlignment="Stretch" Margin="0"
                                      VerticalAlignment="Stretch" Height="auto" Width="auto"
                                      IsManipulationEnabled="True"
                                      RowEditEnding="DataGridTestEditor_InputTable_RowEditEditing"
                                      PreviewKeyDown="DataGridTestEditor_InputTable_PreviewKewDown" ColumnWidth="*"
                                      HorizontalScrollBarVisibility="Visible"
                                      RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" IsTextSearchEnabled="True">
                                <!--="DataGridTestEditor_InputTable_RowEditing">-->
                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem x:Name="MenuItemAddColumn" Header="Add Column"
                                                  Click="MenuItem_AddColumn_Click" />
                                    </ContextMenu>
                                </DataGrid.ContextMenu>

                            </DataGrid>
                        </Grid>

                    </Grid>
                </TabItem>
                <TabItem x:Name="TabItemScenario" Header="Scenario" Margin="0"  VerticalAlignment="Stretch"
                         HorizontalAlignment="Stretch" Width="auto" MinWidth ="110" Loaded="TabItemScenario_Loaded">
                    <Grid ScrollViewer.HorizontalScrollBarVisibility="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4*" MinWidth="100" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="8*" MinWidth="100" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="2*" MinWidth="100" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*" MinHeight="50" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="0.5*" MinHeight="25" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" MinHeight="100" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" MinHeight="50" MaxHeight="100" />
                        </Grid.RowDefinitions>

                        <GridSplitter HorizontalAlignment="right"
                                      VerticalAlignment="Stretch"
                                      Grid.Column="1" Grid.Row="0" ResizeBehavior="PreviousAndNext"
                                      Width="3" />
                        <GridSplitter HorizontalAlignment="right"
                                      VerticalAlignment="Stretch"
                                      Grid.Column="3" Grid.Row="0" ResizeBehavior="PreviousAndNext"
                                      Width="3" />
                        <GridSplitter ResizeDirection="Rows" HorizontalAlignment="Stretch" Grid.ColumnSpan="5"
                                      VerticalAlignment="top"
                                      Grid.Row="1" Grid.Column="0" ResizeBehavior="PreviousAndNext"
                                      Height="3" />
                        <GridSplitter ResizeDirection="Rows" HorizontalAlignment="Stretch" Grid.ColumnSpan="5"
                                      VerticalAlignment="top"
                                      Grid.Row="3" Grid.Column="0" ResizeBehavior="PreviousAndNext"
                                      Height="3" />
                        <GridSplitter ResizeDirection="Rows" HorizontalAlignment="Stretch" Grid.ColumnSpan="5"
                                      VerticalAlignment="top"
                                      Grid.Row="5" Grid.Column="0" ResizeBehavior="PreviousAndNext"
                                      Height="3" />
                        <Grid Grid.Column="2" Grid.ColumnSpan="1">
                            <Grid.ColumnDefinitions>


                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="44" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>

                                <RowDefinition Height="1*" />

                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>

                            <DataGrid Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" x:Name="DataGridScenarioEditor"
                                      AutoGenerateColumns="False" HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch" Height="auto" Width="auto"
                                      IsManipulationEnabled="True" RowEditEnding="DataGridScenarioEditor_RowEditing"
                                      SelectedCellsChanged="DataGridScenario_SelectedCellsChanged"
                                      PreviewKeyDown="dataGridScenarioEditor_PreviewKeyDown"
                                      BeginningEdit="DataGridScenarioEditor_BeginingEdit"
                                      CellEditEnding="DataGridScenarioEditor_CellEditEnding" Margin="0"
                                      RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}"
                                      LostFocus="DataGridScenarioEditor_LostFocus">
                                <DataGrid.Columns>
                                    <!--<DataGridTextColumn Binding="{Binding GuiTestID}" Header="Test"/>-->
                                    <DataGridComboBoxColumn x:Name="DataGridComboboxColumnTest"
                                                            DisplayMemberPath="Expr1" SelectedValuePath="TestId"
                                                            SelectedValueBinding="{Binding GuiTestID,UpdateSourceTrigger=PropertyChanged}"
                                                            Header="Test" Width="100*" />
                                    <!--<DataGridComboBoxColumn    x:Name="DataGridComboboxColumnInputDataRow" DisplayMemberPath="rowID" SelectedValuePath="rowID"  SelectedValueBinding="{Binding InputDataRow,UpdateSourceTrigger=PropertyChanged}"  Header="Row#"  Width="100"/>-->
                                    <DataGridTextColumn
                                        Binding="{Binding InputDataRow,UpdateSourceTrigger=PropertyChanged}"
                                        Header="Row #" CanUserSort="False" Width="20*" />


                                </DataGrid.Columns>
                            </DataGrid>
                            <Button x:Name="BtnMoveStepUpScenario" Grid.Column="1" Grid.Row="0"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="auto"
                                    Click="btnMoveStepUpScenario_Click" IsEnabled="False" Margin="0">
                                <StackPanel>
                                    <Image Source="..\5 - Resources\StockIndexUp.png" />
                                </StackPanel>
                            </Button>
                            <Button x:Name="BtnMoveStepDownScenario" Grid.Column="1" Grid.Row="1"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="auto"
                                    Click="btnMoveStepDownScenario_Click" IsEnabled="False" Margin="0">
                                <StackPanel>
                                    <Image Source="..\5 - Resources\StockIndexDown.png" />
                                </StackPanel>
                            </Button>
                        </Grid>

                        <DataGrid Grid.Column="4" Grid.Row="0" x:Name="DataGridTestViewer" AutoGenerateColumns="False"
                                  HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch" Height="auto"
                                  Width="auto" IsManipulationEnabled="True" IsReadOnly="True"
                                  RowBackground="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn x:Name="DataGridComboboxColumnCommandTestViewer"
                                                        DisplayMemberPath="TestCommandName"
                                                        SelectedValuePath="TestCommandID"
                                                        SelectedValueBinding="{Binding GuiMapCommandID,UpdateSourceTrigger=PropertyChanged}"
                                                        Header="Command" Width="*" IsReadOnly="True" />
                                <DataGridComboBoxColumn x:Name="DataGridComboboxColumnGuiMapTestViewer"
                                                        DisplayMemberPath="GuiMapObjectName"
                                                        SelectedValuePath="GuiMapID"
                                                        SelectedValueBinding="{Binding GuiMapID,UpdateSourceTrigger=PropertyChanged}"
                                                        Header="TA Element" Width="*" IsReadOnly="True" />

                                <DataGridTextColumn
                                    Binding="{Binding InputDataColumn,UpdateSourceTrigger=PropertyChanged}"
                                    Header="Table Column Name" Width=" *" />
                            </DataGrid.Columns>
                        </DataGrid>
                        <TreeView Grid.Column="0" Grid.ColumnSpan="1" Grid.Row="0" Name="TreeViewScenarios"
                                  HorizontalAlignment="Stretch" Height="auto" Margin="0" VerticalAlignment="Stretch"
                                  Width="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                  SelectedItemChanged="TreeViewScenario_SelectedItemChanged" UseLayoutRounding="False"
                                  x:FieldModifier="private">

                            <TreeView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem x:Name="MenuItemAddNewScenario" Header="Add New Scenario"
                                              Click="MenuItem_AddNewScenario_Click" />
                                    <MenuItem x:Name="MenuUpadteScenario" Header="Update Scenario"
                                              Click="MenuItemUpadteScenario_Click" />
                                    <MenuItem x:Name="MenuItemDeleteScenario" Header="Delete Scenario"
                                              Click="MenuItem_DeleteScenario_Click" />
                                    <MenuItem x:Name="MenuItemRunScenario" Header="Run Scenario Locally"
                                              Click="MenuItem_RunScenario_Click" />
                                    <MenuItem x:Name="MenuItemCopyScenario" Header="Copy Scenario"
                                              Click="MenuItem_CopyScenario_Click" />
                                </ContextMenu>
                            </TreeView.ContextMenu>
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding ProjectScenario}">
                                    <TextBlock Text="{Binding GuiProjectName}" />
                                    <HierarchicalDataTemplate.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding ScenarioName}" />
                                        </DataTemplate>
                                    </HierarchicalDataTemplate.ItemTemplate>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                        <Grid Grid.Row="4" Grid.ColumnSpan="5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" MinHeight="25" />
                                <RowDefinition Height="3*" />
                            </Grid.RowDefinitions>
                            <Label Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="0"
                                   x:Name="LabelTableDescriptionScenario" Content="" HorizontalAlignment="Stretch"
                                   Margin="0" VerticalAlignment="Stretch" Height="auto" Width="auto"
                                   HorizontalContentAlignment="Center" BorderBrush="Black" BorderThickness="1"
                                   Background="#FFE6E6E6" />
                            <DataGrid Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="1"
                                      x:Name="DataGridScenarioEditorInputTable" HorizontalAlignment="Stretch"
                                      Margin="0" VerticalAlignment="Stretch" Height="auto" Width="auto"
                                      IsManipulationEnabled="True" IsReadOnly="True" ColumnWidth="*"
                                      RowBackground="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                        </Grid>
                        <Grid Grid.Row="6" Grid.ColumnSpan="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" MinWidth="210" />
                                <ColumnDefinition Width="*" MinWidth="210" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" MinWidth="210" />
                                <ColumnDefinition Width="*" MinWidth="210" />
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="3" Grid.Row="0" x:Name="BtnRunScenario" Content="Run Scenario Locally"
                                    HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="210"
                                    Click="btnRunScenario_Click" Height="47" />
                            <Button Grid.Column="0" Grid.Row="0" x:Name="BtnNewScenario" Content="NewScenario(Flow)"
                                    HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="210"
                                    Height="47" Click="btnNewScenario_Click" />
                            <Button Grid.Column="4" Grid.Row="0" x:Name="BtnStopScenario" Content="Stop Scenario"
                                    HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="210"
                                    Click="btnStopScenario_Click" Height="47" IsEnabled="False" />

                        </Grid>
                        <Label Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="2" x:Name="LabelScenarioDescription"
                               Content="" HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch"
                               Height="auto" Width="auto" BorderBrush="Black" BorderThickness="1"
                               HorizontalContentAlignment="Center" />

                        <Popup x:Name="PopupNewScenario" Width="auto" Height="auto" StaysOpen="True"
                               AllowsTransparency="False" Placement="Center" PopupAnimation="Slide"
                               ScrollViewer.HorizontalScrollBarVisibility="Auto"
                               ScrollViewer.VerticalScrollBarVisibility="Auto" AllowDrop="True">
                            <Border Padding="2" CornerRadius="30" BorderThickness="2">
                                <StackPanel Orientation="Horizontal" Background="White" CanVerticallyScroll="True"
                                            Width="588" Height="461" CanHorizontallyScroll="True" ClipToBounds="True"
                                            IsManipulationEnabled="True"
                                            ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                            ScrollViewer.VerticalScrollBarVisibility="Auto">
                                    <DockPanel Margin="0,0,0,10" Width="590">
                                        <Grid Width="590">
                                            <TreeView x:Name="TreeViewProjectsNewScenario"
                                                      HorizontalAlignment="Stretch" Height="341"
                                                      VerticalAlignment="Top"
                                                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                      SelectedItemChanged="TreeViewProjectsNewScenario_SelectedItemChanged"
                                                      ScrollViewer.CanContentScroll="True" Margin="0,27,368,0"
                                                      Loaded="TreeViewProjectsNewScenario_loaded">
                                                <TreeView.ItemTemplate>
                                                    <HierarchicalDataTemplate ItemsSource="{Binding ProjectScenario}">
                                                        <TextBlock Text="{Binding GuiProjectName}" />
                                                        <HierarchicalDataTemplate.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding ScenarioName}" />
                                                            </DataTemplate>
                                                        </HierarchicalDataTemplate.ItemTemplate>
                                                    </HierarchicalDataTemplate>
                                                </TreeView.ItemTemplate>
                                            </TreeView>
                                            <DataGrid x:Name="DataGridNewScenario" AutoGenerateColumns="False"
                                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                      Margin="222,27,0,83" Width="auto" IsManipulationEnabled="True"
                                                      RowEditEnding="DataGridNewScenario_RowEditing"
                                                      RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn
                                                        Binding="{Binding ScenarioName, UpdateSourceTrigger=PropertyChanged}"
                                                        Header="NewScenarioName " Width="*" />
                                                    <!--<DataGridCheckBoxColumn Binding="{Binding IsAPI, UpdateSourceTrigger=PropertyChanged}" Header="Is API Scenario " Width="*"/>-->
                                                    <DataGridTextColumn
                                                        Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                                                        Header="Description " Width="*" />
                                                </DataGrid.Columns>
                                            </DataGrid>
                                            <Button Name="BtnSaveScenario" Content="Save and Close"
                                                    Click="btnSaveScenario_Click" Margin="198,385,190,23" />
                                        </Grid>
                                    </DockPanel>
                                </StackPanel>
                            </Border>

                        </Popup>
                        <Button x:Name="BtnDumpToTableBeCarefull" Background="red"
                                Content="DumpToTable &#xD;&#xA;&#xD;&#xA;BeCareful" HorizontalAlignment="Left"
                                Margin="517,0,0,0" VerticalAlignment="Top" Width="161" Height="63"
                                Click="btnDumpToTable_BeCarefull_Click" Visibility="Collapsed" />
                    </Grid>
                </TabItem>

                <TabItem Name="ExecutionTab" Header="Execution" Margin="0" Width="auto" VerticalAlignment="Stretch"
                         HorizontalAlignment="Stretch" MinWidth ="110" Loaded="ExecutionTab_Loaded" >
                    <Grid Background="White">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4*" MinWidth="100" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="8*" MinWidth="100" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="0.5*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*" MinHeight="50" />
                            <RowDefinition Height="1*" MinHeight="50" />
                            <RowDefinition Height="0.5*" MinHeight="25" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" MinHeight="100" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" MinHeight="50" MaxHeight="100" />
                        </Grid.RowDefinitions>
                        <GridSplitter HorizontalAlignment="right"
                                      VerticalAlignment="Stretch"
                                      Grid.Column="2" Grid.Row="0" ResizeBehavior="PreviousAndNext" Width="3" />
                        <TreeView Grid.Column="0" Grid.Row="0" Name="TreeViewBatch"
                                  HorizontalAlignment="Stretch" Height="auto" Margin="0" VerticalAlignment="Stretch"
                                  Width="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                  SelectedItemChanged="TreeViewBatch_SelectedItemChanged" UseLayoutRounding="False"                                  
                                  x:FieldModifier="private" Grid.RowSpan="2">
                            <TreeView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem x:Name="MenuItemAddNewBatch" Header="Add New Batch"
                                              Click="MenuItem_AddNewBatch_Click" />
                                    <MenuItem x:Name="MenuUpadteBatch" Header="Update Batch"
                                              Click="MenuItemUpadteBatch_Click" />
                                    <MenuItem x:Name="MenuItemDeleteBatch" Header="Delete Batch"
                                              Click="MenuItem_DeleteBatch_Click" />
                                    <MenuItem x:Name="MenuItemRunBatch" Header="Run Batch"
                                              Click="MenuItem_RunBatch_Click" />
                                </ContextMenu>
                            </TreeView.ContextMenu>
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding ProjectBatch}">
                                    <TextBlock Text="{Binding GuiProjectName}" />
                                    <HierarchicalDataTemplate.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding BatchName}" />
                                        </DataTemplate>
                                    </HierarchicalDataTemplate.ItemTemplate>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>


                        <DataGrid Grid.Column="2" Grid.Row="0" x:Name="DataGridBatchEditor"
                                  AutoGenerateColumns="False" HorizontalAlignment="Stretch" Margin="0"
                                  VerticalAlignment="Stretch" Height="auto" Width="auto" IsManipulationEnabled="True"
                                  RowEditEnding="DataGridBatchEditor_RowEditing"
                                  SelectedCellsChanged="DataGridBatch_SelectedCellsChanged"
                                  PreviewKeyDown="dataGridBatchEditor_PreviewKeyDown"
                                  BeginningEdit="DataGridBatchEditor_BeginingEdit"
                                  CellEditEnding="DataGridBatchEditor_CellEditEnding"
                                  RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" Grid.RowSpan="2" >
                            <DataGrid.Columns>

                                <DataGridComboBoxColumn x:Name="DataGridComboboxColumnScenario"
                                                        DisplayMemberPath="ScenarioName"
                                                        SelectedValuePath=" ScenarioID"
                                                        SelectedValueBinding="{Binding ScenarioID,UpdateSourceTrigger=PropertyChanged}"
                                                        Header="Scenario" Width="*" />
                                <DataGridComboBoxColumn x:Name="DataGridComboboxColumnBrowser"
                                                        DisplayMemberPath="BrowserName" SelectedValuePath=" BrowserID"
                                                        SelectedValueBinding="{Binding BrowserID,UpdateSourceTrigger=PropertyChanged}"
                                                        Header="Browser" Width="*" />
                                <DataGridCheckBoxColumn x:Name="DataGridCheckBoxColumnExecutionStatus" 
                                                        Binding="{Binding ExecutionStatusID,UpdateSourceTrigger=PropertyChanged}"
                                                        Header="ExecutionStatus" IsReadOnly="False" Width="*" />
                            </DataGrid.Columns>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ExecutionStatusID}" Value="0">
                                            <Setter Property="Background" Value="DarkGray" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>

                        </DataGrid>

                        <Grid Grid.Row="4" Grid.ColumnSpan="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" MinWidth="210" />
                                <ColumnDefinition Width="*" MinWidth="210" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" MinWidth="210" />
                                <ColumnDefinition Width="*" MinWidth="210" />
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0" Grid.Row="0" x:Name="BtnRunBatch" Content="Run Batch"
                                HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="210"
                                Click="btnRunBatch_Click" Height="47" />
                            <Button Grid.Column="1" Grid.Row="0" x:Name="BtnNewBatch" Content="New Batch"
                                HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="210"
                                Height="47" Click="btnNewBatch_Click" />
                            <Button Grid.Column="4" Grid.Row="0" x:Name="BtnStopBatch" Content="StopCurrentBatch"
                                HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="210"
                                Click="btnStopBatch_Click" Height="47" IsEnabled="False" />
                        </Grid>

                        <Popup x:Name="PopupNewBatch" Width="auto" Height="auto" StaysOpen="True"
                               AllowsTransparency="False" Placement="Center" PopupAnimation="Fade"
                               ScrollViewer.HorizontalScrollBarVisibility="Auto"
                               ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <Border Padding="2" BorderThickness="2">
                                <StackPanel Orientation="Horizontal" Background="White" CanVerticallyScroll="True"
                                            Width="588" Height="461" CanHorizontallyScroll="True"
                                            IsManipulationEnabled="True">
                                    <DockPanel Margin="0,0,0,10" Width="590">
                                        <Grid Width="590">
                                            <TreeView x:Name="TreeViewProjectsNewBatch" HorizontalAlignment="Stretch"
                                                      Height="336" VerticalAlignment="Top"
                                                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                      SelectedItemChanged="TreeViewProjectsNewBatch_SelectedItemChanged"
                                                      ScrollViewer.CanContentScroll="True" Margin="0,32,368,0"
                                                      Loaded="TreeViewProjectsNewBatch_loaded">
                                                <TreeView.ItemTemplate>
                                                    <HierarchicalDataTemplate>
                                                        <TextBlock Text="{Binding GuiProjectName}" />

                                                    </HierarchicalDataTemplate>
                                                </TreeView.ItemTemplate>
                                            </TreeView>
                                            <DataGrid x:Name="DataGridNewBatch" AutoGenerateColumns="False"
                                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                      Margin="222,32,0,83" Width="auto" IsManipulationEnabled="True"
                                                      RowEditEnding="DataGridNewBatch_RowEditing"
                                                      RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn
                                                        Binding="{Binding BatchName, UpdateSourceTrigger=PropertyChanged}"
                                                        Header="NewBatchName " Width="*" />
                                                </DataGrid.Columns>
                                            </DataGrid>
                                            <Button Name="BtnSaveBatch" Content="Save and Close"
                                                    Margin="198,385,190,23" Click="btnSaveBatch_Click" />
                                        </Grid>
                                    </DockPanel>
                                </StackPanel>
                            </Border>
                        </Popup>
                        <Button x:Name="BtnMoveStepUpExecution" Grid.Column="4" Grid.Row="0"
                                    HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="auto" 
                                    Click="btnMoveStepUpExec_Click" IsEnabled="False" Margin="0">
                            <StackPanel>
                                <Image Source="..\5 - Resources\StockIndexUp.png" />
                            </StackPanel>
                        </Button>
                        <Button x:Name="BtnMoveStepDownExecution" Grid.Column="4" Grid.Row="1"
                                    HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="auto"
                                    Click="btnMoveStepDownExec_Click" IsEnabled="False" Margin="0">
                            <StackPanel>
                                <Image Source="..\5 - Resources\StockIndexDown.png"/>
                            </StackPanel>
                        </Button>
                    </Grid>
                </TabItem>
                <TabItem x:Name="TabItemAnalyzingZone" Header="Analyzing" Margin="0"  Width="auto"
                         VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MinWidth ="110"
                         >
                    <Grid Background="White">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4*" MinWidth="100" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="8*" MinWidth="100" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="2*" MinWidth="100" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="4*" />
                            <RowDefinition Height="0.25*" />
                            <RowDefinition Height="0.25*" />
                            <RowDefinition Height="2*" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <GridSplitter HorizontalAlignment="right"
                                      VerticalAlignment="Stretch"
                                      Grid.Column="1" Grid.Row="0" Grid.RowSpan="4"
                                      ResizeBehavior="PreviousAndNext"
                                      Width="3" />
                        <TreeView Grid.Column="0" Grid.ColumnSpan="1" Grid.Row="0" Grid.RowSpan="4" Name="TreeViewLogs"
                                  HorizontalAlignment="Stretch" Height="auto" Margin="0" VerticalAlignment="Stretch"
                                  Width="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                  SelectedItemChanged="TreeViewLogs_SelectedItemChanged" UseLayoutRounding="False"
                                  Loaded="TreeViewLogs_Loaded"
                                  x:FieldModifier="private">

                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding ProjectLogs}">
                                    <TextBlock Text="{Binding GuiProjectName}" />
                                    <HierarchicalDataTemplate.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Occured}" />
                                        </DataTemplate>
                                    </HierarchicalDataTemplate.ItemTemplate>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>


                        <extendedGrid:ExtendedDataGrid  Grid.Column="2" Grid.ColumnSpan="3" Grid.Row="0" Grid.RowSpan="4" AllowUserToCopy="True" 
                     EnableColumnVirtualization="False" x:Name="DataGridTestResults" Margin="0" AutoGenerateColumns="False" IsReadOnly="True" Background="#FFCDCDCD" AlternatingRowBackground="{x:Null}" IsEnabled="False">

                            <extendedGrid:ExtendedDataGrid.Columns>
                                <extendedColumn:ExtendedDataGridTextColumn Binding="{Binding Occured}" Header="Time"  >
                                    <extendedColumn:ExtendedDataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                            <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                            <Setter Property="TextBlock.Margin" Value="5"/>

                                        </Style>

                                    </extendedColumn:ExtendedDataGridTextColumn.ElementStyle>


                                </extendedColumn:ExtendedDataGridTextColumn>
                                <extendedColumn:ExtendedDataGridTextColumn Binding="{Binding BatchName}" Header="Batch" >
                                    <extendedColumn:ExtendedDataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                            <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                            <Setter Property="TextBlock.Margin" Value="5"/>

                                        </Style>

                                    </extendedColumn:ExtendedDataGridTextColumn.ElementStyle>


                                </extendedColumn:ExtendedDataGridTextColumn>
                                <extendedColumn:ExtendedDataGridTextColumn Binding="{Binding ScenarioName}" Header="Scenario" >
                                    <extendedColumn:ExtendedDataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                            <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                            <Setter Property="TextBlock.Margin" Value="5"/>

                                        </Style>

                                    </extendedColumn:ExtendedDataGridTextColumn.ElementStyle>
                                </extendedColumn:ExtendedDataGridTextColumn>
                                <extendedColumn:ExtendedDataGridTextColumn Binding="{Binding TestName}" Header="Test" >
                                    <extendedColumn:ExtendedDataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                            <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                            <Setter Property="TextBlock.Margin" Value="5"/>
                                        </Style>
                                    </extendedColumn:ExtendedDataGridTextColumn.ElementStyle>
                                </extendedColumn:ExtendedDataGridTextColumn>
                                <extendedColumn:ExtendedDataGridTextColumn Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Header="Description" MaxWidth="300">
                                    <extendedColumn:ExtendedDataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                            <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                            <Setter Property="TextBlock.Margin" Value="5"/>
                                        </Style>
                                    </extendedColumn:ExtendedDataGridTextColumn.ElementStyle>
                                </extendedColumn:ExtendedDataGridTextColumn>
                                <extendedColumn:ExtendedDataGridTextColumn x:Name="ExtendedDataGridTextColumnLogStatusDescription"  Binding="{Binding LogStatusDescription}" Header="Status"  >
                                    <extendedColumn:ExtendedDataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                            <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                            <Setter Property="TextBlock.Margin" Value="5"/>
                                        </Style>
                                    </extendedColumn:ExtendedDataGridTextColumn.ElementStyle>
                                </extendedColumn:ExtendedDataGridTextColumn>
                            </extendedGrid:ExtendedDataGrid.Columns>

                            <Controls:DataGrid.RowStyle>
                                <Style TargetType="Controls:DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LogStatusDescription}" Value="Passed">
                                            <Setter Property="Background" Value="GreenYellow" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding LogStatusDescription}" Value="Failed">
                                            <Setter Property="Background" Value="Coral" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding LogStatusDescription}" Value="Done">
                                            <Setter Property="Background" Value="Cyan" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding LogStatusDescription}" Value="Warning">
                                            <Setter Property="Background" Value="Yellow" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding LogStatusDescription}" Value="Error">
                                            <Setter Property="Background" Value="LightPink" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Controls:DataGrid.RowStyle>
                        </extendedGrid:ExtendedDataGrid>
                    </Grid>
                </TabItem>

                <TabItem Header="Reporting" Margin="0" Width="auto" VerticalAlignment="Stretch"
                         HorizontalAlignment="Stretch" MinWidth ="110">
                    <Grid>

                        <WebBrowser x:Name="WebBrowserReportDashboard" Margin="0"
                                    Loaded="WebBrowser_ReportDashboard_Loaded" IsManipulationEnabled="True"
                                    ScrollViewer.CanContentScroll="True"
                                    ScrollViewer.HorizontalScrollBarVisibility="Auto" />


                    </Grid>

                </TabItem>

                <TabItem  Name="TabItemConfiguration"  Header="Configuration" Margin="0"  VerticalAlignment="Stretch"
                         HorizontalAlignment="Stretch" Width="auto" MinWidth ="110" >
                    <Grid Background="White" Margin="0,0,0,0">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="333*"/>
                            <ColumnDefinition Width="333*"/>
                            <ColumnDefinition Width="333*"/>
                            <ColumnDefinition Width="333*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.5*" />
                            <RowDefinition Height="0.5*" />
                            <RowDefinition Height="3.5*" />
                            <RowDefinition Height="2*" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <DataGrid Grid.Column="1" Grid.ColumnSpan="3" ItemsSource="{Binding}" AutoGenerateColumns="False"  Grid.Row="0" Grid.RowSpan="4" x:Name="DataGridConfiguration"
                                  Margin="0" Loaded="DataGrid_Configuration_Loaded"
                                  RowEditEnding="DataGrid_Configuration_RowEditEnding" 
                                  RowBackground="{DynamicResource {x:Static SystemColors.InfoBrushKey}}" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding Name,UpdateSourceTrigger=PropertyChanged}"
                                                    Header="Name" Width="*"  />
                                <DataGridTextColumn Binding="{Binding Value,UpdateSourceTrigger=PropertyChanged}"
                                                    Header="Value" Width="*" />
                            </DataGrid.Columns>
                        </DataGrid>


                        <Popup x:Name="PopupCloneFromTestingEnviromnet" Width="auto" Height="auto" StaysOpen="True"
                               AllowsTransparency="False" Placement="Center" PopupAnimation="Slide"
                               ScrollViewer.HorizontalScrollBarVisibility="Auto"
                               ScrollViewer.VerticalScrollBarVisibility="Auto" AllowDrop="True" Opened="PopupCloneFromTestingEnviromnet_Opened">
                            <Border Padding="2" CornerRadius="30" BorderThickness="2">
                                <Grid Background="White">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="4*" MinWidth="100" />
                                        <ColumnDefinition Width="4*" MinWidth="100" />
                                        <ColumnDefinition Width="4*" MinWidth="100" />
                                        <ColumnDefinition Width="4*" MinWidth="100" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="4*"  />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="2*" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <ComboBox Name="ComboboxTestingEnvironmentFromClone" DisplayMemberPath="EnvironmentVersionName" SelectedValuePath=" EnvironmentVersionID"  HorizontalAlignment="Stretch" Height="auto"  Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" VerticalAlignment="Stretch" Width="auto" Loaded="ComboboxTestingEnvironment_Loaded" 
                                PreviewKeyDown="ComboboxTestingEnvironment_TextChanged"/>
                                    <Button Name="BtnOk" Content="OK" Click="btnOK_Click" Grid.Row="3" Grid.Column="1" />
                                    <Button Name="BtnCancel" Content="Cancel" Click="btnCancel_Click" Grid.Row="3" Grid.Column="2" />
                                    <Label  Name="LabelConfigurationPopup" Content="" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  HorizontalAlignment="Stretch" Height="auto" Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="4" VerticalAlignment="Stretch" Width="auto"/>
                                </Grid>
                            </Border>
                        </Popup>

                        <ComboBox HorizontalAlignment="Stretch" Grid.Row="1" Name="ComboboxTestingEnvironment" DisplayMemberPath="EnvironmentVersionName" SelectedValuePath=" EnvironmentVersionID"   Height="auto" Visibility="Visible" Width="auto" Loaded="ComboboxTestingEnvironment_Loaded" IsEditable="True"
                                  PreviewKeyDown="ComboboxTestingEnvironment_TextChanged"   IsManipulationEnabled="True" Text="Select Current Version" />
                        <Label    Grid.Row="0" Content="Select Testing Environment:" VerticalContentAlignment="Center"  HorizontalAlignment="Stretch" Height="auto" Visibility="Visible" Width="auto"/>
                        <Button Grid.Column="1" Grid.Row="4" Name="SaveConfButton" Content="Save Configuration"
                                HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="210"
                                Height="47" Click="SaveConfButton_Click" />
                        <Button Grid.Column="2" Grid.Row="4" Name="OpenConfButton" Content="Open Configuration"
                                HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Width="210"
                                Height="47" Click="OpenConfButton_Click" />

                    </Grid>
                </TabItem>

                <TabItem Name="TabItemTools" Header="Tools" Margin="0"  VerticalAlignment="Stretch"
                	HorizontalAlignment="Stretch" Width="auto" MinWidth ="110">

                    <TabControl Name="ToolsTabControl" Margin="0">
                        <TabItem Header="MOP VAX"  >
                            <Grid  Margin="10,9,10,11">
                                <GroupBox Header="Configuration" BorderBrush="Black" Margin="10,0" Width="auto" Height="158" MinHeight="10" MinWidth="200" VerticalAlignment="Top">
                                    <Grid Margin="12,0,-12,0">
                                        <WrapPanel Margin="10,10,0,10" Width="861" HorizontalAlignment="Left">
                                            <RadioButton Name="MOP_DirRbtn" Content="Directory" Margin="5" IsChecked="True" />
                                            <RadioButton Name="MOP_FileRbtn" Content="File" Margin="5"/>
                                            <Label Content="&#x9;Choose Directory or File " FontSize="19" Width="702" Height="35"/>
                                            <Button Name="MOP_OpenBtn" Content="OPEN " Height="62" Width="130" Margin="5" Click="MOP_OpenBtn_Click"/>
                                            <TextBox Name="MOP_FileTbox" TextWrapping="Wrap" Width="694" Height="28" MinWidth="300" Margin="5" />
                                        </WrapPanel>
                                        <WrapPanel Margin="0,10,30,0" HorizontalAlignment="Right" Width="348">
                                            <CheckBox Content="Mobile Projects" Height="47" x:Name="MOP_CheckBtn" IsChecked="False" Margin="5" Checked="MOP_CheckBtn_Checked" Unchecked="MOP_CheckBtn_Unchecked"/>
                                            <ComboBox  x:Name="ComboBox_MOP" Width="334" MinWidth="200" DisplayMemberPath="GuiProjectName" SelectedValue="GuiProjectName"  Loaded="ComboBox_MOP_Loaded"  IsEditable="False" IsEnabled="false" Height="28" />
                                        </WrapPanel>
                                    </Grid>

                                </GroupBox>
                                <GroupBox Header="Execution" Margin="10,180,10,44" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="auto" Height="auto">
                                    <Grid Margin="-146,0,146,0">
                                        <TextBox x:Name="IndexerTextArea" TextWrapping="Wrap" VerticalAlignment="Top" Width="auto" Height="431" Margin="172,5,18,0" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                                        <StackPanel HorizontalAlignment="Right" Width="128" Margin="0,10,-134,-10">
                                            <CheckBox Name="MOP_BackupChkBtn" Content="Backup" Height="42" MinWidth="100"/>
                                            <!--<CheckBox Name="MOP_InteractiveChkBtn" Content="Interactive Mode"  Height="35" MinWidth="100"  />-->
                                            <Button Name="MOP_RunBtn" Content="Run" HorizontalAlignment="Left" Height="62" VerticalAlignment="Bottom" MinWidth="103" Width="128" Click="MOP_RunBtn_Run"/>
                                        </StackPanel>
                                    </Grid>
                                </GroupBox>
                            </Grid>
                        </TabItem>
                        <TabItem Name="TabItemLoaderIo" Header="Loader.io" Loaded="TabItemLoaderIo_loaded"  >
                            <GroupBox  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="auto" Height="auto">
                                <Grid Background="White">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="4*" MinWidth="100" />
                                        <ColumnDefinition Width="4*" MinWidth="100" />
                                        <ColumnDefinition Width="4*" MinWidth="100" />
                                        <ColumnDefinition Width="2*" MinWidth="100" />
                                        <ColumnDefinition Width="2*" MinWidth="100" />
                                        <ColumnDefinition Width="2*" MinWidth="100" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="16*" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <Label Content="Select Test:" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="auto" Height="auto" />
                                    <Label Content="Select Duration Time in sec: " Grid.Row="1" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="auto" Height="auto" />
                                    <Button x:Name ="ButtonRunLoadTest" Content="Run Load Test" Grid.Column="3" HorizontalAlignment="Stretch"  Grid.Row="2" VerticalAlignment="Stretch" Click="ButtonRunTest_Click"/>
                                    <Button x:Name ="ButtonStopLoadTest" Content="Stop Load Test" Grid.Column="4" HorizontalAlignment="Stretch"  Grid.Row="2" VerticalAlignment="Stretch" Click="ButtonStopTest_Click"/>
                                    <ComboBox Name="ComboboxSelectLoadTest" Text="Loading AllTests from Loader.io...- This operation can take several minutes" Grid.ColumnSpan="2" DisplayMemberPath="ConcatenateName" SelectedValuePath="test_id"  HorizontalAlignment="Stretch" Grid.Column="0"  Grid.Row="2" VerticalAlignment="Stretch" IsEditable="True"  Loaded="Combobox_SelectLoadTest_Loaded"/>
                                    <TextBox Name="TextboxSelectDurationtime"  HorizontalAlignment="Stretch" Grid.Column="2"  Grid.Row="2" VerticalAlignment="Stretch"  />
                                    <Label  Grid.Row="0" Grid.Column="0" Content="Change App key if wrong:" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="auto" Height="auto"/>

                                    <TextBox Name="TextboxAppKey"  HorizontalAlignment="Stretch" Grid.Column="1"  Grid.Row="0" VerticalAlignment="Stretch" SelectionChanged="TextboxAppKey_SelectionChanged"  />
                                    <Button Name="ButtonLoadTests" Content="Load List of Tests" Grid.Column="3" HorizontalAlignment="Stretch"  Grid.Row="0" VerticalAlignment="Stretch" Click="ButtonLoadTests_Click"/>
                                    <WebBrowser x:Name="WebBrowserLoaderio" Margin="0" Grid.Column="0"  Grid.Row="3" Grid.ColumnSpan="6" Grid.RowSpan="3"
                                    Loaded="WebBrowserLoaderio_Loaded" IsManipulationEnabled="True"
                                    ScrollViewer.CanContentScroll="True"
                                    ScrollViewer.HorizontalScrollBarVisibility="Auto" />
                                </Grid>
                            </GroupBox>
                        </TabItem>

                    </TabControl>
                </TabItem>
                <!--<TextBox Margin="919,-65,0,760" TextWrapping="Wrap" Text="Search" HorizontalAlignment="Left" VerticalAlignment="Bottom" SpellCheck.IsEnabled="True" Height="57" Width="284"/>-->

            </TabControl>
        </Border>
        <Label x:Name="LblCurrentlyRunning" Content="" HorizontalAlignment="Center" VerticalAlignment="Bottom" IsEnabled="true" Margin="10,0" Width="Auto"/>

    </Grid>
</Window>